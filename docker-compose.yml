# version: '3.8'

services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: nodedb
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck: # Adicionado healthcheck para o DB
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password"]
      timeout: 20s
      retries: 10
      start_period: 30s

  node:
    build:
      context: ./node
      dockerfile: Dockerfile
    environment:
      MYSQL_HOST: db
      MYSQL_USER: root
      MYSQL_PASSWORD: root_password
      MYSQL_DATABASE: nodedb
    depends_on:
      db:
        condition: service_healthy # Agora o DB tem um healthcheck
    networks:
      - app-network


  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    # Comando entrypoint ajustado para iniciar o Nginx após a espera
    entrypoint: /bin/sh -c "dockerize -wait tcp://node:3000 -timeout 20s nginx -g 'daemon off;'"
    ports:
      - "8080:80"
    depends_on:
      node:
        condition: service_started # Condição adicionada para o node
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
